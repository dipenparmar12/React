{"version":3,"sources":["Practice/LoginControl.jsx","Practice/Toggle.jsx","Practice/ConditionalRendering.jsx","Practice/SmallMethods.jsx","Practice/ClickTic.jsx","Practice/NameForm.jsx","Practice/FormSelectElement.jsx","Practice/TempCalc.jsx","Practice/FormHandlingMultipleInputs.jsx","Practice/TicTacTok/Square.jsx","Practice/TicTacTok/TicTacTokGame.jsx","Practice/TicTacTok/Board.jsx","Practice/TicTacTok/Game.jsx","Practice/TodoApp/TodoItem.jsx","Practice/TodoApp/TodoInput.jsx","Practice/TodoApp/TodoApp.jsx","Internet/ScrollableTabs.js","App.js","serviceWorker.js","index.js"],"names":["TechnologyTitle","props","GuestGreeting","Greeting","isThere","myValue","LoginBtn","onClick","LogoutBtn","LoginControl","prop","handle__LoginClick","bind","handle__LogoutClick","state","isLoggedIn","console","log","this","setState","username","ToggleBtn","Component","Toggle","isToggleOn","handaleToggle","e","target","id","ShowWarning","params","warnings","ConditionalRendering","Math","floor","random","SmallMethods","ListNumbers","numbers","listNumbers","map","number","key","toString","ClickTic","counter","handleDescriment","event","handleIncrement","React","NamePrint","name","NameForm","inputName","handleNameChange","handleSubmit","value","preventDefault","alert","onSubmit","type","onChange","FormSelectElement","selectInput","handleChange","multiple","scaleNames","c","f","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","temperature","converter","userInput","parseFloat","isNaN","output","round","TemperatureInput","onTemperatureChange","scale","Square","className","squareBtn","squareBtnValue","Board","index","boardProps_onClick","rendorSquare","status","moves","calculateWinner","squares","winLines","i","length","a","b","TodoItem","checked","item","completed","text","TodoInput","Fragment","onKeyDown","handleEnterPress","TodoApp","items","keyCode","push","todo","TabPanel","children","other","role","hidden","aria-labelledby","Box","p","Typography","a11yProps","useStyles","makeStyles","theme","root","flexGrow","width","backgroundColor","palette","background","paper","ScrollableTabs","classes","useState","setValue","AppBar","position","color","Tabs","newValue","indicatorColor","textColor","variant","scrollButtons","aria-label","Tab","label","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6121a809.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nfunction TechnologyTitle(props) {\n  return <h1>React.js</h1>;\n}\n\nfunction GuestGreeting() {\n  return <h3>Please sign Up</h3>;\n}\n\nfunction Greeting(props) {\n  let isThere = props.myValue ? props.myValue : 'Dipen';\n  return <h2>Welcome ({isThere}), You are logged in</h2>;\n}\n\nfunction LoginBtn(props) {\n  return <button onClick={props.onClick}>Login</button>;\n}\n\nfunction LogoutBtn(props) {\n  return <button onClick={props.onClick}>LogOut</button>;\n}\n\nexport default class LoginControl extends Component {\n  // 0.\n  constructor(prop) {\n    super(prop);\n    this.handle__LoginClick = this.handle__LoginClick.bind(this);\n    this.handle__LogoutClick = this.handle__LogoutClick.bind(this);\n    this.state = { isLoggedIn: false };\n  }\n\n  handle__LoginClick() {\n    console.log('Login CLicked');\n    this.setState({\n      isLoggedIn: true,\n      username: 'I Am',\n    });\n  }\n\n  handle__LogoutClick() {\n    console.log('Log out Clicked....');\n    this.setState({ isLoggedIn: false });\n  }\n\n  render() {\n    const isLoggedIn = this.state.isLoggedIn;\n\n    let ToggleBtn = isLoggedIn ? (\n      <LogoutBtn onClick={this.handle__LogoutClick} />\n    ) : (\n      <LoginBtn onClick={this.handle__LoginClick} />\n    );\n\n    return (\n      <div>\n        <TechnologyTitle />\n        {ToggleBtn}\n        {this.state.isLoggedIn ? <Greeting /> : <GuestGreeting />}\n        <p>User logged in: {this.state.isLoggedIn ? 'True' : 'False'}</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Toggle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isToggleOn: false };\n    this.handaleToggle = this.handaleToggle.bind(this);\n  }\n\n  handaleToggle(e) {\n    console.log('Toggled to:', e.target);\n    this.setState((state) => ({\n      isToggleOn: !state.isToggleOn,\n    }));\n  }\n\n  render() {\n    return (\n      <button onClick={this.handaleToggle} id=\"1\">\n        {this.state.isToggleOn ? 'On' : 'Off'}\n      </button>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nfunction ShowWarning(params) {\n  console.log(params);\n  if (params.warnings) {\n    return null;\n  }\n  return (\n    <div>\n      <h3>ErrorFound</h3>\n      <p>\n        Some Errors found in you input, Lorem ipsum dolor sit amet consectetur\n        adipisicing elit. Incidunt quidem quam exercitationem odio....\n      </p>\n    </div>\n  );\n}\n\nexport default class ConditionalRendering extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Conditional_Rendering</h1>\n        <p>Refresh Browser serval times</p>\n        <ShowWarning warnings={Math.floor(Math.random() * 2)} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class SmallMethods extends Component {\n  render() {\n    return (\n      <div>\n        {/* ------------------- */}\n        {/* ------------------- */}\n        <h4>1. List Numbers</h4>\n        <ListNumbers />\n        <ListNumbers numbers={[10, 20, 30]} />\n        <hr />\n\n        {/* ------------------- */}\n        {/* ------------------- */}\n        <h4>2. List Numbers</h4>\n      </div>\n    );\n  }\n}\n\nfunction ListNumbers(props) {\n  let numbers = props.numbers ? props.numbers : [1, 2, 3, 4, 5];\n  let listNumbers = numbers.map((number) => (\n    <span key={number.toString()}> {number},</span>\n  ));\n\n  return <ul>{listNumbers}</ul>;\n}\n","import React from 'react';\n\nclass ClickTic extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('constructor');\n    this.state = { counter: 0 };\n\n    this.handleDescriment = this.handleDescriment.bind(this);\n  }\n\n  handleIncrement(event) {\n    this.setState((state) => ({\n      counter: state.counter + 1,\n    }));\n  }\n\n  handleDescriment(event) {\n    // event.preventDefault();\n    this.setState((state) => ({\n      counter: state.counter - 1,\n    }));\n  }\n\n  render() {\n    return (\n      <div>\n        <div>{this.state.counter}</div> <br />\n        <button\n          onClick={(event) => {\n            this.handleIncrement();\n          }}\n        >\n          Inc\n        </button>\n        <button onClick={this.handleDescriment}>Decr</button>\n      </div>\n    );\n  }\n\n  componentWillMount() {\n    console.log('WillMount');\n  }\n\n  componentDidMount() {\n    console.log('DidMount');\n  }\n\n  componentWillUpdate() {\n    console.log('WillUpdate');\n  }\n\n  componentDidUpdate() {\n    console.log('DidUpdate');\n  }\n\n  // componentDidCatch() {\n  //   console.log(\"DidCatch\");\n  // }\n  // componentWillReceiveProps() {\n  //   console.log(\"WillReceiveProps\");\n  // }\n  // componentWillUnmount() {\n  //   console.log(\"WillUnMount\");\n  // }\n}\n\nexport default ClickTic;\n\n// 1 Contructor\n// 2.1 componentWillMount\n// 2.2 componentDidMount\n\n// 1.0 event componentWillUpdate ( every time when update, before didMount )\n// 1.1 event componentDidUpdate ( every time when update, after WillUpdate )\n","import React, { Component } from 'react';\n\nfunction NamePrint(params) {\n  return <span> My name is {params.name}</span>;\n}\n\nexport default class NameForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { inputName: null };\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleNameChange(e) {\n    // console.log('name:' + e.target.value);\n    this.setState({ inputName: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    console.log('form submited: ' + this.state.inputName);\n    alert('Welcome to amazing world for enjoyment, ' + this.state.inputName);\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Your Name:\n            <input type=\"text\" onChange={this.handleNameChange} />\n          </label>\n          <input type=\"submit\" value=\"Enter\" />\n        </form>\n        <hr />\n        <NamePrint name={this.state.inputName} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class FormSelectElement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { selectInput: 'chess' };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    console.log(event.target.value);\n    this.setState({ selectInput: event.target.value });\n  }\n  handleSubmit(event) {\n    alert('Your favorite hobby is: ' + this.state.selectInput);\n    event.preventDefault();\n  }\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Pick your favorite hobby:\n          <select\n            value={[this.state.selectInput, 'Shoping', 'PhotoGraphy']}\n            onChange={this.handleChange}\n            multiple={true}\n          >\n            <option value=\"Drawing\">Drawing</option>\n            <option value=\"Hiking\">Hiking</option>\n            <option value=\"Dance\">Dance</option>\n            <option value=\"PhotoGraphy\">PhotoGraphy</option>\n            <option value=\"YouTuber\">YouTuber</option>\n            <option value=\"Shoping\">Shoping</option>\n            <option value=\"Camping\">Camping</option>\n            <option value=\"Cooking\">Cooking</option>\n            <option value=\"Juggling\">Juggling</option>\n            <option value=\"swimming\">swimming</option>\n            <option value=\"scubaDiving\">scubaDiving</option>\n            <option value=\"Tracking\">Tracking</option>\n            <option value=\"VideoGames\">VideoGames</option>\n          </select>\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nconst scaleNames = { c: 'Celsius', f: 'Fahrenheit' };\n\nfunction toCelsius(fahrenheit) {\n  return ((fahrenheit - 32) * 5) / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return (celsius * 9) / 5 + 32;\n}\n\nfunction tryConvert(temperature, converter) {\n  const userInput = parseFloat(temperature);\n  if (isNaN(userInput)) return;\n  const output = converter(userInput);\n  return (Math.round(output * 1000) / 1000).toString();\n}\n\nclass TemperatureInput extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n\n    return (\n      <div>\n        <fieldset>\n          <legend>Enter temperature in {scaleNames[scale]}:</legend>\n          <input\n            value={temperature}\n            onChange={this.handleChange}\n            type=\"number\"\n          />\n        </fieldset>\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default class TempCalc extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { temperature: '', scale: 'c' };\n\n    this.handleCelesiusChange = this.handleCelesiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n  }\n\n  handleCelesiusChange(temperature) {\n    this.setState({ scale: 'c', temperature });\n  }\n  handleFahrenheitChange(temperature) {\n    this.setState({ scale: 'f', temperature });\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius =\n      scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit =\n      scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n\n    return (\n      <div>\n        <TemperatureInput\n          scale=\"c\"\n          temperature={celsius}\n          onTemperatureChange={this.handleCelesiusChange}\n        />\n        <TemperatureInput\n          scale=\"f\"\n          temperature={fahrenheit}\n          onTemperatureChange={this.handleFahrenheitChange}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class FormHandlingMultipleInputs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isGoing: true, numberOfGuests: '' };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.name === 'isGoing' ? target.checked : target.value;\n\n    this.setState({\n      [name]: value,\n    });\n\n    // this.setState((state) => ({\n    //   [name]: this.state.name,\n    // }));\n\n    console.log(name, value);\n  }\n\n  render() {\n    return (\n      <form>\n        <label>\n          Is going:\n          <input\n            name=\"isGoing\"\n            type=\"checkbox\"\n            checked={this.state.isGoing}\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <br />\n        <label>\n          Number of guests:\n          <input\n            name=\"numberOfGuests\"\n            type=\"number\"\n            value={this.state.numberOfGuests}\n            onChange={this.handleInputChange}\n          />\n        </label>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Square extends Component {\n  render() {\n    return (\n      <button className=\"square\" onClick={this.props.squareBtn}>\n        {this.props.squareBtnValue}\n      </button>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class TicTacTokGame extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.clearGameData = this.clearGameData.bind(this);\n\n    this.state = {\n      activePlayer: 'X',\n      currentPlayer: null,\n      gameWinner: null,\n      boardBox: Array(9).fill(null),\n    };\n  }\n\n  clearGameData() {\n    this.setState({\n      activePlayer: 'X',\n      currentPlayer: null,\n      gameWinner: null,\n      boardBox: Array(9).fill(null),\n    });\n  }\n\n  handleClick(boxIndex) {\n    const updateBoardBox = this.state.boardBox;\n    if (!this.state.gameWinner && updateBoardBox[boxIndex] === null) {\n      updateBoardBox[boxIndex] = this.state.activePlayer === 'X' ? 'O' : 'X';\n\n      this.setState({\n        boardBox: updateBoardBox,\n        activePlayer: this.state.activePlayer === 'X' ? 'O' : 'X',\n      });\n    }\n    this.checkWinner(boxIndex);\n  }\n\n  checkWinner(boxIndex) {\n    const currentBoardBox = this.state.boardBox;\n    let winRows = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n\n    for (let i = 0; i < winRows.length; i++) {\n      if (\n        isNaN(currentBoardBox[winRows[i][0]]) &&\n        currentBoardBox[winRows[i][0]] === currentBoardBox[winRows[i][1]] &&\n        currentBoardBox[winRows[i][1]] === currentBoardBox[winRows[i][2]]\n      ) {\n        this.setState({\n          gameWinner: true,\n        });\n        alert('Congo!, you win');\n      }\n    }\n\n    console.log('------');\n  }\n\n  rendorSquare(boxIndex) {\n    return (\n      <button className=\"square\" onClick={() => this.handleClick(boxIndex)}>\n        {this.state.boardBox[boxIndex]}\n      </button>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <div className=\"border-row\">\n            {this.rendorSquare(0)}\n            {this.rendorSquare(1)}\n            {this.rendorSquare(2)}\n          </div>\n          <div className=\"border-row\">\n            {this.rendorSquare(3)}\n            {this.rendorSquare(4)}\n            {this.rendorSquare(5)}\n          </div>\n          <div className=\"border-row\">\n            {this.rendorSquare(6)}\n            {this.rendorSquare(7)}\n            {this.rendorSquare(8)}\n          </div>\n          <h4> Player: {this.state.activePlayer === 'X' ? 'O' : 'X'} </h4>\n          <div className=\"border-row\">\n            <button\n              onClick={() => {\n                this.clearGameData();\n              }}\n            >\n              Restart\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Square from './Square';\n\nexport default class Board extends Component {\n  rendorSquare(index) {\n    return (\n      <Square\n        squareBtnValue={this.props.squareBtnValue[index]}\n        squareBtn={(e) => {\n          this.props.boardProps_onClick(index);\n        }}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"border-row\">\n          {this.rendorSquare(0)}\n          {this.rendorSquare(1)}\n          {this.rendorSquare(2)}\n        </div>\n        <div className=\"border-row\">\n          {this.rendorSquare(3)}\n          {this.rendorSquare(4)}\n          {this.rendorSquare(5)}\n        </div>\n        <div className=\"border-row\">\n          {this.rendorSquare(6)}\n          {this.rendorSquare(7)}\n          {this.rendorSquare(8)}\n        </div>\n        <h1>{this.props.status}</h1>\n        <div>{this.props.moves}</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Board from './Board';\n\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{ squares: Array(9).fill(null) }],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    // is someone win game or not\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{ squares: squares }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n    // console.log(this.state.history); // board squares() 9 steps, 9 boards\n  }\n\n  junpTo(stepNumber) {\n    this.setState({\n      stepNumber,\n      xIsNext: stepNumber % 2 === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    //// for Retrive History with btn click\n    const moves = history.map((step, i) => {\n      const desc = i ? 'Go toMove #' + i : 'GoTo Starting Point';\n      console.log(step);\n      return (\n        <li key={i}>\n          <button onClick={() => this.junpTo(i)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div>\n          <div className=\"game-board\">\n            <Board\n              squareBtnValue={current.squares}\n              boardProps_onClick={(i) => this.handleClick(i)}\n              status={status}\n              moves={moves}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const winLines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < winLines.length; i++) {\n    const [a, b, c] = winLines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a]; // WinChar = X:O\n    }\n  }\n  return null;\n}\n","import React from 'react';\n\nexport default function TodoItem(props) {\n  return (\n    <div className=\"todo-item\">\n      <input\n        type=\"checkbox\"\n        checked={props.item.completed}\n        onChange={() => props.handleChange(props.item.id)}\n      />\n      <p>{props.item.text}</p>\n    </div>\n  );\n}\n","import React from 'react';\nexport default function TodoInput(props) {\n  return (\n    <React.Fragment>\n      <input\n        type=\"text\"\n        name=\"newItemText\"\n        id=\"newItemText\"\n        onKeyDown={(e) => props.handleEnterPress(e)}\n      />\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport TodoInput from './TodoInput';\n\nexport default class TodoApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { items: [] };\n    this.handleEnterPress = this.handleEnterPress.bind(this);\n  }\n\n  handleEnterPress(e) {\n    if (e.keyCode === 13) {\n      let items = this.state.items;\n      items.push({ text: e.target.value, completed: false });\n      this.setState({ items });\n      e.target.value = null;\n    }\n  }\n\n  render() {\n    const items = this.state.items.map((todo, i) =>\n      todo ? <TodoItem item={todo} key={i} /> : null\n    );\n\n    return (\n      <div className=\"todo-list\">\n        <h2>My TodoApp</h2>\n        <TodoInput handleEnterPress={this.handleEnterPress} />\n        {items}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport LoginControl from '../Practice/LoginControl';\nimport Toggle from '../Practice/Toggle';\nimport ConditionalRendering from '../Practice/ConditionalRendering';\nimport SmallMethods from '../Practice/SmallMethods';\nimport ClickTic from '../Practice/ClickTic';\nimport NameForm from '../Practice/NameForm';\nimport FormSelectElement from '../Practice/FormSelectElement';\nimport FormHandlingMultipleInputs from '../Practice/FormHandlingMultipleInputs';\nimport TempCalc from '../Practice/TempCalc';\nimport TicTacTokGame from '../Practice/TicTacTok/TicTacTokGame';\nimport Game from '../Practice/TicTacTok/Game';\nimport TodoApp from '../Practice/TodoApp/TodoApp';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function ScrollableTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          <Tab label=\"Item One\" {...a11yProps(0)} />\n          <Tab label=\"Item Two\" {...a11yProps(1)} />\n          <Tab label=\"Item Three\" {...a11yProps(2)} />\n          <Tab label=\"Item Four\" {...a11yProps(3)} />\n          <Tab label=\"Item Five\" {...a11yProps(4)} />\n          <Tab label=\"Item Six\" {...a11yProps(5)} />\n          <Tab label=\"LoginControll\" {...a11yProps(6)} />\n        </Tabs>\n      </AppBar>\n\n      <TabPanel value={value} index={0}>\n        <FormSelectElement />\n      </TabPanel>\n\n      <TabPanel value={value} index={1}>\n        <NameForm />\n      </TabPanel>\n\n      <TabPanel value={value} index={2}>\n        <ClickTic />\n      </TabPanel>\n\n      <TabPanel value={value} index={3}>\n        <SmallMethods />\n      </TabPanel>\n\n      <TabPanel value={value} index={4}>\n        <ConditionalRendering />\n      </TabPanel>\n\n      <TabPanel value={value} index={5}>\n        <Toggle />\n      </TabPanel>\n\n      <TabPanel value={value} index={6}>\n        <LoginControl />\n      </TabPanel>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport ScrollableTabs from './Internet/ScrollableTabs';\n\n// import HelloWorld from './HelloWorld/HelloWorld';\n// import ClickTic from './Practice/ClickTic';\n// import LoginControl from './Practice/LoginControl';\n// import Toggle from './Practice/Toggle';\n// import ConditionalRendering from './Practice/ConditionalRendering.jsx';\n// import SmallMethods from './Practice/SmallMethods.jsx';\n// import NameForm from './Practice/NameForm';\n// import FormSelectElement from './Practice/FormSelectElement';\n// import FormHandlingMultipleInputs from './Practice/FormHandlingMultipleInputs';\n// import TempCalc from './Practice/TempCalc';\n// import TicTacTokGame from './Practice/TicTacTok/TicTacTokGame';\n// import Game from './Practice/TicTacTok/Game';\nimport TodoApp from './Practice/TodoApp/TodoApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <h3>ReactJs</h3> */}\n      {/* <HelloWorld /> */}\n      {/* <ClickTic /> */}\n      {/* <LoginControl /> */}\n      {/* <Toggle /> */}\n      {/* <ConditionalRendering /> */}\n      {/* <SmallMethods /> */}\n      {/* <NameForm /> */}\n      {/* <FormSelectElement /> */}\n      {/* <FormHandlingMultipleInputs /> */}\n      {/* <TempCalc /> */}\n      {/* <TicTacTokGame /> */}\n      {/* <Game /> */}\n      {/* <TodoApp /> */}\n      {/* <Navbar /> */}\n\n      <BrowserRouter>\n        <div>\n          <Route exact path=\"/todo\" component={TodoApp} />\n          <Route exact path=\"/practice\" component={ScrollableTabs} />\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}